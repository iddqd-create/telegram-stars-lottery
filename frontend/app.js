// Initialize Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();

// Configuration
const API_BASE_URL = window.location.hostname === 'localhost' 
    ? 'http://localhost:5000' 
    : 'https://telegram-stars-lottery.onrender.com/'; // Replace with actual backend URL

// Apply Telegram theme
const theme = tg.colorScheme || 'dark';
document.body.classList.add(`theme-${theme}`);

// Sound effects
const sounds = {
    join: new Audio('data:audio/wav;base64,

// Initialize app
async function init() {
    console.log('Initializing app...');
    
    // Get user info from Telegram
    const initData = tg.initData;
    
    if (!initData) {
        console.error('No initData available');
        showError('Failed to authenticate with Telegram');
        return;
    }
    
    try {
        // Fetch user info from backend
        const response = await fetch(`${API_BASE_URL}/api/user/info`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ initData })
        });
        
        if (!response.ok) {
            throw new Error('Failed to fetch user info');
        }
        
        currentUser = await response.json();
        console.log('User info:', currentUser);
        
        // Update UI
        updateUserInfo();
        
        // Show menu screen
        setTimeout(() => {
            showScreen('menu-screen');
        }, 1500);
        
    } catch (error) {
        console.error('Initialization error:', error);
        showError('Failed to load user data');
    }
}

// Update user info in UI
function updateUserInfo() {
    if (!currentUser) return;
    
    document.getElementById('user-name').textContent = 
        currentUser.first_name || currentUser.username || 'Player';
    document.getElementById('total-games').textContent = currentUser.total_games || 0;
    document.getElementById('total-wins').textContent = currentUser.total_wins || 0;
}

// Screen management
function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
}

// Entry fee selection
document.querySelectorAll('.fee-card').forEach(card => {
    card.addEventListener('click', async () => {
        const entryFee = parseInt(card.dataset.fee);
        await joinLottery(entryFee);
    });
});

// Join lottery
async function joinLottery(entryFee) {
    try {
        console.log(`Joining lottery with entry fee: ${entryFee}`);
        
        // Create invoice
        const response = await fetch(`${API_BASE_URL}/api/create-invoice`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                initData: tg.initData,
                entryFee: entryFee
            })
        });
        
        if (!response.ok) {
            throw new Error('Failed to create invoice');
        }
        
        const data = await response.json();
        const invoiceLink = data.invoice_link;
        
        // Open invoice in Telegram
        tg.openInvoice(invoiceLink, (status) => {
            console.log('Invoice status:', status);
            
            if (status === 'paid') {
                // Payment successful, wait for backend to process
                showWaitingScreen(entryFee);
            } else if (status === 'cancelled') {
                console.log('Payment cancelled');
            } else if (status === 'failed') {
                showError('Payment failed. Please try again.');
            }
        });
        
    } catch (error) {
        console.error('Join lottery error:', error);
        showError('Failed to join lottery');
    }
}

// Show waiting screen
function showWaitingScreen(entryFee) {
    // For now, show a placeholder
    // In production, backend should return room_id after payment
    showScreen('waiting-screen');
    
    // Simulate room creation (replace with actual API call)
    setTimeout(() => {
        pollForRoom(entryFee);
    }, 1000);
}

// Poll for room assignment
async function pollForRoom(entryFee) {
    // This is a simplified version
    // In production, backend should provide room_id after successful payment
    try {
        const response = await fetch(`${API_BASE_URL}/api/user/current-room`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                initData: tg.initData
            })
        });
        
        if (response.ok) {
            const data = await response.json();
            if (data.room_id) {
                joinRoom(data.room_id);
            }
        }
    } catch (error) {
        console.error('Poll room error:', error);
    }
}

// Join room and start listening for updates
function joinRoom(roomId) {
    currentRoom = { room_id: roomId };
    
    // Update UI
    document.getElementById('room-id-display').textContent = 
        roomId.substring(0, 8) + '...';
    
    // Start listening for room updates
    listenToRoomUpdates(roomId);
}

// Listen to room updates via Server-Sent Events
function listenToRoomUpdates(roomId) {
    if (eventSource) {
        eventSource.close();
    }
    
    eventSource = new EventSource(`${API_BASE_URL}/api/room/${roomId}/stream`);
    
    eventSource.onmessage = (event) => {
        const room = JSON.parse(event.data);
        console.log('Room update:', room);
        
        if (room.error) {
            console.error('Room error:', room.error);
            showError(room.error);
            return;
        }
        
        currentRoom = room;
        updateRoomUI(room);
        
        // Check if room is drawing
        if (room.status === 'drawing') {
            showDrawingScreen(room);
        }
        
        // Check if room is completed
        if (room.status === 'completed') {
            showWinnerScreen(room);
            eventSource.close();
        }
    };
    
    eventSource.onerror = (error) => {
        console.error('EventSource error:', error);
        eventSource.close();
    };
}

// Update room UI
function updateRoomUI(room) {
    // Update participants count
    document.getElementById('current-participants').textContent = 
        room.participants.length;
    
    // Update pool amount
    document.getElementById('pool-amount').textContent = room.total_pool;
    
    // Update participants grid
    const grid = document.getElementById('participants-grid');
    grid.innerHTML = '';
    
    for (let i = 0; i < 6; i++) {
        const slot = document.createElement('div');
        slot.className = 'participant-slot';
        
        if (i < room.participants.length) {
            const participant = room.participants[i];
            slot.classList.add('filled');
            
            const avatar = document.createElement('div');
            avatar.className = 'participant-avatar';
            avatar.textContent = getInitial(participant.first_name || participant.username);
            
            const name = document.createElement('div');
            name.className = 'participant-name';
            name.textContent = participant.first_name || participant.username || 'Player';
            
            slot.appendChild(avatar);
            slot.appendChild(name);
        } else {
            slot.classList.add('empty');
            
            const avatar = document.createElement('div');
            avatar.className = 'participant-avatar';
            avatar.textContent = '?';
            
            const name = document.createElement('div');
            name.className = 'participant-name';
            name.textContent = 'Waiting...';
            
            slot.appendChild(avatar);
            slot.appendChild(name);
        }
        
        grid.appendChild(slot);
    }
}

// Show drawing screen
function showDrawingScreen(room) {
    showScreen('drawing-screen');
    
    // Update prize info
    document.getElementById('prize-pool').textContent = room.total_pool + '⭐';
    const winnerAmount = Math.floor(room.total_pool * 0.8);
    document.getElementById('winner-amount').textContent = winnerAmount + '⭐';
    
    // Create wheel with participants
    const wheelContainer = document.getElementById('wheel-container');
    wheelContainer.innerHTML = '';
    
    // Duplicate participants for infinite scroll effect
    const participants = [...room.participants, ...room.participants, ...room.participants];
    
    participants.forEach(participant => {
        const card = document.createElement('div');
        card.className = 'wheel-card';
        
        const avatar = document.createElement('div');
        avatar.className = 'wheel-avatar';
        avatar.textContent = getInitial(participant.first_name || participant.username);
        
        const name = document.createElement('div');
        name.className = 'wheel-name';
        name.textContent = participant.first_name || participant.username || 'Player';
        
        card.appendChild(avatar);
        card.appendChild(name);
        wheelContainer.appendChild(card);
    });
    
    // Simulate drawing for 5 seconds
    setTimeout(() => {
        // Room status should be updated by backend
        // Winner will be shown when status becomes 'completed'
    }, 5000);
}

// Show winner screen
function showWinnerScreen(room) {
    showScreen('winner-screen');
    
    const winner = room.winner;
    const isCurrentUserWinner = winner.user_id === currentUser.user_id;
    
    // Update title
    document.getElementById('winner-title').textContent = 
        isCurrentUserWinner ? '🎉 You Won! 🎉' : '🎊 Winner Announced! 🎊';
    
    // Update winner info
    const winnerAvatar = document.getElementById('winner-avatar');
    winnerAvatar.innerHTML = `<span class="avatar-placeholder">${getInitial(winner.first_name || winner.username)}</span>`;
    
    document.getElementById('winner-name').textContent = 
        winner.first_name || winner.username || 'Winner';
    
    document.getElementById('final-prize').textContent = winner.amount + '⭐';
    
    // Show confetti
    createConfetti();
    
    // Update participants list
    const participantsList = document.getElementById('final-participants-list');
    participantsList.innerHTML = '';
    
    room.participants.forEach(participant => {
        const item = document.createElement('div');
        item.className = 'participant-item';
        
        if (participant.user_id === winner.user_id) {
            item.classList.add('winner');
        }
        
        const info = document.createElement('div');
        info.className = 'participant-item-info';
        
        const avatar = document.createElement('div');
        avatar.className = 'participant-item-avatar';
        avatar.textContent = getInitial(participant.first_name || participant.username);
        
        const name = document.createElement('div');
        name.className = 'participant-item-name';
        name.textContent = participant.first_name || participant.username || 'Player';
        
        info.appendChild(avatar);
        info.appendChild(name);
        item.appendChild(info);
        
        if (participant.user_id === winner.user_id) {
            const badge = document.createElement('div');
            badge.className = 'participant-item-badge';
            badge.textContent = 'WINNER';
            item.appendChild(badge);
        }
        
        participantsList.appendChild(item);
    });
}

// Create confetti animation
function createConfetti() {
    const confettiContainer = document.getElementById('confetti');
    confettiContainer.innerHTML = '';
    
    const colors = ['#FFD700', '#FFA500', '#4A90E2', '#4CAF50', '#FF5252'];
    
    for (let i = 0; i < 50; i++) {
        const confetti = document.createElement('div');
        confetti.className = 'confetti-piece';
        confetti.style.left = Math.random() * 100 + '%';
        confetti.style.background = colors[Math.floor(Math.random() * colors.length)];
        confetti.style.animationDelay = Math.random() * 3 + 's';
        confetti.style.animationDuration = (Math.random() * 2 + 2) + 's';
        confettiContainer.appendChild(confetti);
    }
}

// Get initial from name
function getInitial(name) {
    if (!name) return '?';
    return name.charAt(0).toUpperCase();
}

// Back to menu
document.getElementById('back-to-menu').addEventListener('click', () => {
    if (eventSource) {
        eventSource.close();
    }
    showScreen('menu-screen');
});

// Play again
document.getElementById('play-again').addEventListener('click', () => {
    showScreen('menu-screen');
    // Refresh user stats
    init();
});

// Share result
document.getElementById('share-result').addEventListener('click', () => {
    if (currentRoom && currentRoom.winner) {
        const message = `I just played Stars Lottery! 🎰\n\n` +
            `Winner: ${currentRoom.winner.first_name || 'Player'}\n` +
            `Prize: ${currentRoom.winner.amount}⭐\n\n` +
            `Join the fun!`;
        
        tg.shareMessage(message);
    }
});

// Referral System
document.getElementById('open-referral-btn').addEventListener('click', async () => {
    await loadReferralData();
    showScreen('referral-screen');
});

document.getElementById('back-from-referral').addEventListener('click', () => {
    showScreen('menu-screen');
});

async function loadReferralData() {
    try {
        const initData = tg.initData;
        
        // Get referral link and stats
        const response = await fetch(`${API_BASE_URL}/api/referral/link`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ initData })
        });
        
        if (!response.ok) {
            throw new Error('Failed to load referral data');
        }
        
        const data = await response.json();
        
        // Update UI
        document.getElementById('referral-link-input').value = data.referral_link;
        document.getElementById('total-referrals').textContent = data.total_referrals;
        document.getElementById('total-ref-bonuses').textContent = data.total_bonuses;
        
        // Load detailed stats
        await loadReferralStats();
        
    } catch (error) {
        console.error('Error loading referral data:', error);
        showError('Failed to load referral information');
    }
}

async function loadReferralStats() {
    try {
        const initData = tg.initData;
        
        const response = await fetch(`${API_BASE_URL}/api/referral/stats`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ initData })
        });
        
        if (!response.ok) {
            throw new Error('Failed to load referral stats');
        }
        
        const data = await response.json();
        
        // Update referrals list
        const listContainer = document.getElementById('referrals-list');
        
        if (data.referrals && data.referrals.length > 0) {
            listContainer.innerHTML = '';
            
            data.referrals.forEach(referral => {
                const item = document.createElement('div');
                item.className = 'referral-item';
                
                const initial = referral.first_name.charAt(0).toUpperCase();
                
                item.innerHTML = `
                    <div class="referral-item-info">
                        <div class="referral-avatar">${initial}</div>
                        <div class="referral-details">
                            <div class="referral-name">${referral.first_name}</div>
                            <div class="referral-stats-small">
                                <span>🎮 ${referral.games_played} games</span>
                                <span>🏆 ${referral.wins} wins</span>
                            </div>
                        </div>
                    </div>
                `;
                
                listContainer.appendChild(item);
            });
        } else {
            listContainer.innerHTML = `
                <div class="empty-state">
                    <div class="empty-icon">👥</div>
                    <p>No referrals yet. Start inviting friends!</p>
                </div>
            `;
        }
        
    } catch (error) {
        console.error('Error loading referral stats:', error);
    }
}

// Copy referral link
document.getElementById('copy-referral-link').addEventListener('click', async () => {
    const input = document.getElementById('referral-link-input');
    const button = document.getElementById('copy-referral-link');
    const copyIcon = document.getElementById('copy-icon');
    const copyText = document.getElementById('copy-text');
    
    try {
        await navigator.clipboard.writeText(input.value);
        
        // Visual feedback
        button.classList.add('copied');
        copyIcon.textContent = '✅';
        copyText.textContent = 'Copied!';
        
        // Play sound if available
        if (sounds.join) {
            sounds.join.play().catch(() => {});
        }
        
        setTimeout(() => {
            button.classList.remove('copied');
            copyIcon.textContent = '📋';
            copyText.textContent = 'Copy';
        }, 2000);
        
    } catch (error) {
        console.error('Failed to copy:', error);
        showError('Failed to copy link');
    }
});

// Share referral link
document.getElementById('share-referral-link').addEventListener('click', () => {
    const link = document.getElementById('referral-link-input').value;
    const text = '🎁 Join Stars Lottery and win big! Use my referral link:';
    
    if (tg.openTelegramLink) {
        const shareUrl = `https://t.me/share/url?url=${encodeURIComponent(link)}&text=${encodeURIComponent(text)}`;
        tg.openTelegramLink(shareUrl);
    } else if (navigator.share) {
        navigator.share({
            title: 'Stars Lottery',
            text: text,
            url: link
        }).catch(err => console.log('Share cancelled', err));
    } else {
        // Fallback: copy to clipboard
        document.getElementById('copy-referral-link').click();
    }
});

// Check for referral parameter on init
function checkReferralParam() {
    const urlParams = new URLSearchParams(window.location.search);
    const startParam = tg.initDataUnsafe?.start_parameter;
    
    if (startParam && startParam.startsWith('ref_')) {
        const referrerId = startParam.replace('ref_', '');
        registerReferral(referrerId);
    }
}

async function registerReferral(referrerId) {
    try {
        const initData = tg.initData;
        
        const response = await fetch(`${API_BASE_URL}/api/referral/register`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
                initData,
                referrerId: parseInt(referrerId)
            })
        });
        
        if (response.ok) {
            console.log('Referral registered successfully');
            // Show success message or bonus
            tg.showPopup({
                title: '🎁 Welcome!',
                message: 'You were invited by a friend! Enjoy playing!',
                buttons: [{type: 'ok'}]
            });
        }
        
    } catch (error) {
        console.error('Error registering referral:', error);
    }
}

// Error handling
function showError(message) {
    const modal = document.getElementById('error-modal');
    const messageEl = document.getElementById('error-message');
    messageEl.textContent = message;
    modal.classList.add('active');
}

document.getElementById('error-close').addEventListener('click', () => {
    document.getElementById('error-modal').classList.remove('active');
});

// Initialize on load
window.addEventListener('load', () => {
    console.log('App loaded');
    checkReferralParam();
    init();
});

// Handle Telegram theme
if (tg.colorScheme === 'dark') {
    document.body.classList.add('dark-theme');
}

// Set Telegram main button (optional)
tg.MainButton.setText('Join Lottery');
tg.MainButton.hide();

console.log('App script loaded');
